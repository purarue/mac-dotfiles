#!/usr/bin/env bash
#
# creates a gif from a video file
# command line arguments: 
# $1 - the path to the movie we're converting
# $2 - the start time of the finished gif
# $3 - duration; the length of the video clip after the start time to convert
# Time(s) can be in seconds, or it also accepts the "hh:mm:ss[.xxx]" format
# $4 - (optional) specify an integer fps value. default is 10
# For best output, it should be a factor of 100; e.g. 10, 20, 25, 50
#
# e.g. gifme ~/Movies/your-favorite-movie.mp4 00:43:04 5
# e.g. gifme ~/Movies/your-favorite-movie.mp4 01:04:02 10.5 25
#
# requires 'imagemagick' and 'ffmpeg'
#
# Modified from: https://github.com/holman/dotfiles/blob/master/bin/movieme

# quit if ffmpeg fails
set -e

# reset temp directory
rm -rf /tmp/gifme
mkdir -p /tmp/gifme

# check for command line arguments
if [ -z "$3" ]; then
  echo -e "You didn't provide enough arguments."
  echo -e "\$1 - the path to the movie we're converting
\$2 - the start time of the finished gif
\$3 - duration; the length of the video clip after the start time to convert
Time(s) can be in seconds, or it also accepts the \"hh:mm:ss[.xxx]\" format
\$4 - (optional) specify an integer fps value. default is 10
For best output, it should be a factor of 100; e.g. 10, 20, 25, 50"
  exit 1
fi

# process fps arg
fps=10
if [ ! -z "$4" ]; then
  fps=$4
fi
convert_delay=$(( 100 / $fps ))

# generate output filename based on input file
current_time=$(date +%H.%M.%S)
output_filename=$(basename "$1")
output_filename="${output_filename%.*}" # remove extension
output_filename="${output_filename}-gifme-${current_time}.gif"

# create frames
# i - input
# f - force image format
# scale:
#   iw - input width
#   ih - input height
# iw/2:-1 halves the width and scales the height accordingly
# ss - start time
# t - time
# r - fps
ffmpeg -i "$1" -f image2 -vf "scale=iw/2:-1" -ss $2 -t $3 -r $fps /tmp/gifme/d-%09d.png
printf "Converting %d frames to a gif...\n" $(ls -1 /tmp/gifme | wc -l)
# convert to gif
# delay - speed, determined by fps above
# loop 0 - make gif repeat itself
convert -delay $convert_delay -loop 0 /tmp/gifme/*.png "$output_filename"
printf "Created %s successfully\n" $output_filename
